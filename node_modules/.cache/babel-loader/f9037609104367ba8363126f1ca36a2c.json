{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/i818433/Desktop/TTB2020/src/WeatherHistory.js\";\nimport React from 'react';\nimport { LineChart } from 'react-chartkick';\nexport const WeatherHistory = props => {\n  function getWeatherData(county) {\n    console.log(\"counties: \" + county);\n    let data = [[], []];\n    let prevCity = \"\";\n    let currCity = \"\";\n    let currIndex = -1;\n    county.forEach(obj => {\n      let currCity = obj[\"NAME\"];\n      let dateProp = obj[\"DATE\"];\n      let maxtemp = obj[\"EMXT\"];\n      let precip = obj[\"PRCP\"];\n\n      if (prevCity.localeCompare(currCity) !== 0) {\n        let tempObj = {\n          \"name\": \"\",\n          \"data\": {}\n        };\n        let precipObj = {\n          \"name\": \"\",\n          \"data\": {}\n        };\n        tempObj.name = currCity;\n        precipObj.name = currCity;\n        tempObj.data = {\n          [dateProp]: maxtemp\n        };\n        precipObj.data = {\n          [dateProp]: precip\n        };\n        data[0].push(tempObj);\n        data[1].push(precipObj);\n        currIndex++;\n      } else {\n        data[0][currIndex].data[dateProp] = maxtemp;\n        data[1][currIndex].data[dateProp] = precip;\n      }\n\n      prevCity = currCity;\n    });\n    return data;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"weather-charts\",\n    children: [/*#__PURE__*/_jsxDEV(LineChart, {\n      id: \"temp-precip-chart\",\n      data: getWeatherData(props.county)[0],\n      legend: false,\n      min: 70,\n      max: 115,\n      width: \"100%\",\n      height: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      id: \"temp-precip-chart\",\n      data: getWeatherData(props.county)[1],\n      legend: false,\n      min: 0,\n      max: 80,\n      width: \"100%\",\n      height: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_c = WeatherHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherHistory\");","map":{"version":3,"sources":["/Users/i818433/Desktop/TTB2020/src/WeatherHistory.js"],"names":["React","LineChart","WeatherHistory","props","getWeatherData","county","console","log","data","prevCity","currCity","currIndex","forEach","obj","dateProp","maxtemp","precip","localeCompare","tempObj","precipObj","name","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACrC,WAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,MAA3B;AACA,QAAIG,IAAI,GAAG,CAAC,EAAD,EAAK,EAAL,CAAX;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,SAAS,GAAI,CAAC,CAAlB;AACAN,IAAAA,MAAM,CAACO,OAAP,CAAeC,GAAG,IAAI;AAClB,UAAIH,QAAQ,GAAGG,GAAG,CAAC,MAAD,CAAlB;AACA,UAAIC,QAAQ,GAAGD,GAAG,CAAC,MAAD,CAAlB;AACA,UAAIE,OAAO,GAAGF,GAAG,CAAC,MAAD,CAAjB;AACA,UAAIG,MAAM,GAAGH,GAAG,CAAC,MAAD,CAAhB;;AACA,UAAGJ,QAAQ,CAACQ,aAAT,CAAuBP,QAAvB,MAAqC,CAAxC,EAA2C;AACvC,YAAIQ,OAAO,GAAI;AAAC,kBAAQ,EAAT;AAAa,kBAAQ;AAArB,SAAf;AACA,YAAIC,SAAS,GAAI;AAAC,kBAAQ,EAAT;AAAa,kBAAQ;AAArB,SAAjB;AACAD,QAAAA,OAAO,CAACE,IAAR,GAAeV,QAAf;AACAS,QAAAA,SAAS,CAACC,IAAV,GAAiBV,QAAjB;AACAQ,QAAAA,OAAO,CAACV,IAAR,GAAe;AAAC,WAACM,QAAD,GAAYC;AAAb,SAAf;AACAI,QAAAA,SAAS,CAACX,IAAV,GAAiB;AAAC,WAACM,QAAD,GAAYE;AAAb,SAAjB;AACAR,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQa,IAAR,CAAaH,OAAb;AACAV,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQa,IAAR,CAAaF,SAAb;AACAR,QAAAA,SAAS;AACZ,OAVD,MAWK;AACDH,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQG,SAAR,EAAmBH,IAAnB,CAAyBM,QAAzB,IAAqCC,OAArC;AACAP,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQG,SAAR,EAAmBH,IAAnB,CAAyBM,QAAzB,IAAqCE,MAArC;AACH;;AACDP,MAAAA,QAAQ,GAAGC,QAAX;AACH,KArBD;AAsBA,WAAOF,IAAP;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAG,gBAAb;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,EAAE,EAAG,mBAAhB;AACA,MAAA,IAAI,EAAIJ,cAAc,CAACD,KAAK,CAACE,MAAP,CAAd,CAA6B,CAA7B,CADR;AAEA,MAAA,MAAM,EAAE,KAFR;AAGA,MAAA,GAAG,EAAI,EAHP;AAGW,MAAA,GAAG,EAAI,GAHlB;AAIA,MAAA,KAAK,EAAG,MAJR;AAIe,MAAA,MAAM,EAAG;AAJxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,SAAD;AAAW,MAAA,EAAE,EAAG,mBAAhB;AACA,MAAA,IAAI,EAAID,cAAc,CAACD,KAAK,CAACE,MAAP,CAAd,CAA6B,CAA7B,CADR;AAEA,MAAA,MAAM,EAAE,KAFR;AAGA,MAAA,GAAG,EAAI,CAHP;AAGU,MAAA,GAAG,EAAI,EAHjB;AAIA,MAAA,KAAK,EAAG,MAJR;AAIe,MAAA,MAAM,EAAG;AAJxB;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAjDM;KAAMH,c","sourcesContent":["import React from 'react';\nimport { LineChart } from 'react-chartkick'\n\nexport const WeatherHistory = (props) => {\n    function getWeatherData(county) {\n        console.log(\"counties: \" + county);\n        let data = [[], []];\n        let prevCity = \"\";\n        let currCity = \"\";\n        let currIndex =  -1;\n        county.forEach(obj => {\n            let currCity = obj[\"NAME\"];\n            let dateProp = obj[\"DATE\"];\n            let maxtemp = obj[\"EMXT\"];\n            let precip = obj[\"PRCP\"];\n            if(prevCity.localeCompare(currCity) !== 0) {\n                let tempObj  = {\"name\": \"\", \"data\": {}};\n                let precipObj  = {\"name\": \"\", \"data\": {}};\n                tempObj.name = currCity;\n                precipObj.name = currCity;\n                tempObj.data = {[dateProp]: maxtemp};\n                precipObj.data = {[dateProp]: precip}\n                data[0].push(tempObj);\n                data[1].push(precipObj);\n                currIndex++;\n            }\n            else {\n                data[0][currIndex].data.[dateProp] = maxtemp;\n                data[1][currIndex].data.[dateProp] = precip;\n            }\n            prevCity = currCity;\n        });\n        return data;\n    }\n\n    return(\n        <div class = \"weather-charts\">\n            <LineChart id = \"temp-precip-chart\" \n            data = {getWeatherData(props.county)[0]} \n            legend={false} \n            min = {70} max = {115}\n            width = \"100%\" height = \"100%\"\n            />\n            <LineChart id = \"temp-precip-chart\" \n            data = {getWeatherData(props.county)[1]} \n            legend={false} \n            min = {0} max = {80}\n            width = \"100%\" height = \"100%\"\n            />\n        </div>\n);\n\n}"]},"metadata":{},"sourceType":"module"}