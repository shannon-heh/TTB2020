{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/i818433/Desktop/TTB2020/src/History.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport { LineChart } from 'react-chartkick';\nimport 'chart.js';\n\nconst axios = require('axios');\n\nexport const History = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [carousel, setCarousel] = useState(false);\n\n  const getData = () => {\n    const url = 'http://localhost:3001/';\n    const firesUrl = url + 'fires?Counties=';\n    const sonomaUrl = url + 'sonoma_year';\n    const counties = [\"Sonoma\", \"Butte\", \"Napa\"];\n    const queries = counties.map(county => axios.get(firesUrl + county));\n    queries.push(axios.get(sonomaUrl));\n    let temp = [];\n    axios.all(queries).then(resArr => {\n      temp = resArr.map(resArr => resArr.data);\n      setData(temp);\n      setCarousel(true);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  console.log(data);\n\n  function getFireData(county) {\n    let fireData = {\n      \"numFires\": 0,\n      \"acresBurned\": 0\n    };\n    county.forEach(fire => {\n      if (fire[\"ArchiveYear\"] >= 2015) {\n        fireData.numFires++;\n        fireData.acresBurned += fire[\"AcresBurned\"];\n      }\n    });\n    return fireData;\n  }\n\n  function showFireData(county) {\n    let fireData = getFireData(county);\n    const numFires = fireData.numFires;\n    const acresBurned = fireData.acresBurned;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"fire-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: numFires + \" fires\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: acresBurned + \" acres burned\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"since 2015\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n  function getWeatherData(county) {\n    return fireData;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: carousel && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Carousel, {\n        children: [showFireData(data[0]), showFireData(data[1]), showFireData(data[2])]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        data: getWeatherData(ddata[3])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(History, \"GAl828j5z6gPwrejW73hu4D5Y3g=\");\n\n_c = History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["/Users/i818433/Desktop/TTB2020/src/History.js"],"names":["React","useState","useEffect","Carousel","LineChart","axios","require","History","data","setData","carousel","setCarousel","getData","url","firesUrl","sonomaUrl","counties","queries","map","county","get","push","temp","all","then","resArr","console","log","getFireData","fireData","forEach","fire","numFires","acresBurned","showFireData","getWeatherData","ddata"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; \nimport { Carousel } from 'react-responsive-carousel';\nimport { LineChart } from 'react-chartkick'\nimport 'chart.js'\n\nconst axios = require('axios');\n\nexport const History = () => {\n    const [data,setData]=useState([]);\n    const [carousel,setCarousel]=useState(false);\n\n    const getData = () => {\n        const url = 'http://localhost:3001/';\n        const firesUrl = url + 'fires?Counties=';\n        const sonomaUrl = url + 'sonoma_year';\n        const counties = [\"Sonoma\", \"Butte\", \"Napa\"];\n        const queries = counties.map(county => axios.get(firesUrl+county));\n        queries.push(axios.get(sonomaUrl));\n        let temp = [];\n\n        axios.all(queries)\n        .then(resArr => {\n            temp = resArr.map(resArr => resArr.data);\n            setData(temp);\n            setCarousel(true);\n        });\n    };\n\n    useEffect(()=>{\n        getData();\n    },[]);\n\n    console.log(data);\n\n    function getFireData(county) {\n        let fireData = {\n            \"numFires\": 0,\n            \"acresBurned\": 0 \n        };\n        county.forEach(fire => {\n            if(fire[\"ArchiveYear\"] >= 2015) {\n                fireData.numFires++;\n                fireData.acresBurned += fire[\"AcresBurned\"];\n            }\n        });\n        return fireData;\n    }\n\n    function showFireData(county) {\n        let fireData = getFireData(county);\n        const numFires = fireData.numFires;\n        const acresBurned = fireData.acresBurned;\n        return( \n            <div class=\"fire-data\">\n                <p>{numFires + \" fires\"}</p>\n                <p>{acresBurned + \" acres burned\"}</p>\n                <p>since 2015</p>\n            </div>\n        );\n    }\n\n    function getWeatherData(county) {\n        return fireData;\n    }\n\n    return( \n        <>\n        {carousel && (\n            <>\n                <Carousel>\n                    {showFireData(data[0])}\n                    {showFireData(data[1])}\n                    {showFireData(data[2])}\n                </Carousel>\n                <LineChart data = {getWeatherData(ddata[3])}/>\n            </>\n        )}\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}